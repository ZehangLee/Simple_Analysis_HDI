hdi.stat[,hdi.stat[,2] == "VERY HIGH HUMAN DEVELOPMENT"]
?Comparison
?base::logic
??logic
1:10 %in% c(1,3,5,9)
hdi.stat[,2]
pull(hdi.stat,var = 2)%in%index
row.name(pull(hdi.stat,var = 2)%in%index)
s
row.names(pull(hdi.stat,var = 2)%in%index)
pull(hdi.stat,var = 2)%in%index
row.names(pull(hdi.stat,var = 2)%in%index)
a=row.names(pull(hdi.stat,var = 2)%in%index)
View(hdi.stat)
hdi.stat=slice(hdi.stat,-1)
View(hdi.stat)
hdi.stat[2,c(1,2)]=hdi.stat[1,c(1,2)]
temp2 <- tempfile()
download.file("http://hdr.undp.org/sites/default/files/2018_statistical_annex_all.xlsx",temp2, mode="wb")
hdi.stat <- readxl::read_xlsx(temp2,sheet = 1)
unlink(temp2)
rm(temp1,temp2)
hdi.stat=slice(hdi.stat,-1)
hdi.stat[2,c(1,2)]
hdi.stat[1,c(1,2)]=hdi.stat[2,c(1,2)]
hdi.stat=slice(hdi.stat,-c(2,3))
colnames(hdi.stat)=hdi.stat[1,]
View(hdi.stat)
View(hdi.stat)
colnames(hdi.stat)
compact(colnames(hdi.stat))
select(hdi.stat,-"NA")
select(hdi.stat,"NA")
temp2 <- tempfile()
download.file("http://hdr.undp.org/sites/default/files/2018_statistical_annex_all.xlsx",temp2, mode="wb")
hdi.stat <- readxl::read_xlsx(temp2,sheet = 1)
unlink(temp2)
rm(temp1,temp2)
hdi.stat=slice(hdi.stat,-1)
hdi.stat[1,c(1,2)]=hdi.stat[2,c(1,2)]
slice(hdi.stat,-c(2,3))%>%select(-c(4,6,8,10,12,14))->hdi.stat
colnames(hdi.stat)=hdi.stat[1,]
hdi.stat=slice(hdi.stat,-1)
filter(hdi.stat,HDI RANK==1)
filter(hdi.stat,"HDI RANK"==1)
filter(hdi.stat,hdi.stat$`HDI rank`==1)
which(hdi.stat$`HDI rank`==1)
filter(hdi.stat,`HDI rank`==1)
temp2 <- tempfile()
download.file("http://hdr.undp.org/sites/default/files/2018_statistical_annex_all.xlsx",temp2, mode="wb")
hdi.stat <- readxl::read_xlsx(temp2,sheet = 1,range = A3-O198)
unlink(temp2)
rm(temp1,temp2)
View(hdi.stat)
temp2 <- tempfile()
download.file("http://hdr.undp.org/sites/default/files/2018_statistical_annex_all.xlsx",temp2, mode="wb")
hdi.stat <- readxl::read_xlsx(temp2,sheet = 1,range = A3-O198)
unlink(temp2)
rm(temp1,temp2)
temp2 <- tempfile()
download.file("http://hdr.undp.org/sites/default/files/2018_statistical_annex_all.xlsx",temp2, mode="wb")
hdi.stat <- readxl::read_xlsx(temp2,sheet = 1,range = "A3-O198")
unlink(temp2)
rm(temp1,temp2)
temp2 <- tempfile()
download.file("http://hdr.undp.org/sites/default/files/2018_statistical_annex_all.xlsx",temp2, mode="wb")
hdi.stat <- readxl::read_xlsx(temp2,sheet = 1,range = "A3:O198")
unlink(temp2)
rm(temp1,temp2)
View(hdi.stat)
colnames(hdi.stat[,c(1,2)])=hdi.stat[1,c(1,2)]
View(hdi.stat)
colnames(hdi.stat)
colnames(hdi.stat)[c(1,2)]=hdi.stat[1,c(1,2)]
View(hdi.stat)
slice(hdi.stat,-c(1,2))%>%select(-c(4,6,8,10,12,14))->hdi.stat
hdi.stat%>%slice(-c(1,2))%>%select(-c(4,6,8,10,12,14))
hdi.stat%>%slice(-c(1,2))
hdi.stat%>%slice(-c(1,2))%>%select(-c(4,6,8,10,12,14))
temp2 <- tempfile()
download.file("http://hdr.undp.org/sites/default/files/2018_statistical_annex_all.xlsx",temp2, mode="wb")
hdi.stat <- readxl::read_xlsx(temp2,sheet = 1,range = "A3:O196")
unlink(temp2)
rm(temp1,temp2)
library(tidyverse)
year=as.character(seq(1990,2017))
test=hdi.databank%>%select(-"9999")%>%gather(one_of(year),key = "year",value = "hdi")
index=c("VERY HIGH HUMAN DEVELOPMENT","HIGH HUMAN DEVELOPMENT","MEDIUM HUMAN DEVELOPMENT","LOW HUMAN DEVELOPMENT")
colnames(hdi.stat)[c(1,2)]=hdi.stat[1,c(1,2)]
hdi.stat%>%slice(-c(1,2))%>%select(-c(4,6,8,10,12))
View(hdi.stat)
temp2 <- tempfile()
download.file("http://hdr.undp.org/sites/default/files/2018_statistical_annex_all.xlsx",temp2, mode="wb")
hdi.stat <- readxl::read_xlsx(temp2,sheet = 1,range = "A3:O196")
unlink(temp2)
rm(temp1,temp2)
View(hdi.stat)
temp2 <- tempfile()
download.file("http://hdr.undp.org/sites/default/files/2018_statistical_annex_all.xlsx",temp2, mode="wb")
hdi.stat <- readxl::read_xlsx(temp2,sheet = 1,range = "A3:M198")
unlink(temp2)
rm(temp1,temp2)
colnames(hdi.stat)[c(1,2)]=hdi.stat[1,c(1,2)]
hdi.stat%>%slice(-c(1,2))%>%select(-c(4,6,8,10,12))
hdi.stat%>%slice(-c(1,2))%>%select(-c(4,6,8,10,12))->hdi.stat
View(hdi.stat)
replace(colnames(hdi.stat),'',',')
replace(colnames(hdi.stat),' ','.')
View(hdi.stat)
class(colnames(hdi.stat))
sapply(colnames(hdi.stat),replace(x,' ','.'))
sapply(colnames(hdi.stat),replace(' ','.'))
replace(colnames(hdi.stat)[1],' ','.')
gsub(" ",".",colnames(hdi.stat)[1])
gsub(" ",".",colnames(hdi.stat))
colnames(hdi.stat)[c(1,2)]=gsub(" ",".",colnames(hdi.stat))
View(hdi.stat)
colnames(hdi.stat)=gsub(" ",".",colnames(hdi.stat))
View(hdi.stat)
hdi.stat
View(hdi.databank)
View(hdi.stat)
temp1 <- tempfile()
download.file("http://hdr.undp.org/sites/default/files/2018_all_indicators.xlsx",temp1, mode="wb")
hdi.databank <- readxl::read_xlsx(temp1,sheet = 1)
unlink(temp1)
temp2 <- tempfile()
download.file("http://hdr.undp.org/sites/default/files/2018_statistical_annex_all.xlsx",temp2, mode="wb")
hdi.stat <- readxl::read_xlsx(temp2,sheet = 1,range = "A3:M198")
unlink(temp2)
rm(temp1,temp2)
library(tidyverse)
year=as.character(seq(1990,2017))
test=hdi.databank%>%select(-"9999")%>%gather(one_of(year),key = "year",value = "hdi")
colnames(hdi.stat)=gsub(" ",".",colnames(hdi.stat))
hdi.stat%>%slice(-c(1,2))%>%select(-c(4,6,8,10,12))->hdi.stat
View(hdi.stat)
View(hdi.stat)
temp1 <- tempfile()
download.file("http://hdr.undp.org/sites/default/files/2018_all_indicators.xlsx",temp1, mode="wb")
hdi.databank <- readxl::read_xlsx(temp1,sheet = 1)
unlink(temp1)
temp2 <- tempfile()
download.file("http://hdr.undp.org/sites/default/files/2018_statistical_annex_all.xlsx",temp2, mode="wb")
hdi.stat <- readxl::read_xlsx(temp2,sheet = 1,range = "A3:M198")
unlink(temp2)
rm(temp1,temp2)
library(tidyverse)
year=as.character(seq(1990,2017))
test=hdi.databank%>%select(-"9999")%>%gather(one_of(year),key = "year",value = "hdi")
colnames(hdi.stat)=gsub(" ",".",colnames(hdi.stat))
hdi.stat%>%slice(-c(1,2))%>%select(-c(4,6,8,10,12))->hdi.stat
View(hdi.stat)
temp2 <- tempfile()
download.file("http://hdr.undp.org/sites/default/files/2018_statistical_annex_all.xlsx",temp2, mode="wb")
hdi.stat <- readxl::read_xlsx(temp2,sheet = 1,range = "A3:M198")
unlink(temp2)
View(hdi.stat)
colnames(hdi.stat)=gsub(" ",".",colnames(hdi.stat))
View(hdi.stat)
temp2 <- tempfile()
download.file("http://hdr.undp.org/sites/default/files/2018_statistical_annex_all.xlsx",temp2, mode="wb")
hdi.stat <- readxl::read_xlsx(temp2,sheet = 1,range = "A3:M198")
unlink(temp2)
rm(temp1,temp2)
View(hdi.stat)
colnames(hdi.stat)=gsub(" ",".",colnames(hdi.stat))
View(hdi.stat)
colnames(hdi.stat)[c(1,2)]
colnames(hdi.stat)[c(1,2)]=c("HDI.rank","Country")
View(hdi.stat)
View(hdi.stat)
hdi.stat%>%slice(-c(1,2))%>%select(-c(4,6,8,10,12))->hdi.stat
View(hdi.stat)
View(hdi.stat)
level_one <- hdi.stat %>% select(Country) %>% filter (!startsWith(Country,'VERY')) %>% pull;
level_two
level_one
level_one <- hdi.stat %>% select(Country) %>% filter (startsWith(Country,'VERY')) %>% pull;
level_two <- hdi.stat %>% select(Country) %>% filter (startsWith(Country,'HIGH')) %>% pull;
level_three <- hdi.stat %>% select(Country) %>% filter (startsWith(Country,'MEDIUM')) %>% pull;
level_four <- hdi.stat %>% select(Country) %>% filter (startsWith(Country,'LOW')) %>% pull;
level_one <- hdi.stat %>% select(Country) %>% filter (startsWith(Country,'VERY')) %>% pull
level_two <- hdi.stat %>% select(Country) %>% filter (startsWith(Country,'HIGH')) %>% pull
level_three <- hdi.stat %>% select(Country) %>% filter (startsWith(Country,'MEDIUM')) %>% pull
level_four <- hdi.stat %>% select(Country) %>% filter (startsWith(Country,'LOW')) %>% pull
which(hdi.stat$Country==level_one)
which(hdi.stat$Country==level_two)
hdi.stat%>%which(Country==level_one)
hdi.stat%>%match(Country,level_one)
hdi.stat%>%match(Country,level_one)
View(hdi.stat)
match(hdi.stat$Country,level_one)
level_one_index= which(hdi.stat$Country==level_one)
level_one_index
level_two_index= which(hdi.stat$Country==level_two)
level_four_index=which(hdi.stat$Country==level_four)
hdi.stat%>%slice(level_one_index+1:level_two_index-1)
test=hdi.stat%>%slice(level_one_index+1:level_two_index-1)
View(test)
test=hdi.stat%>%slice(level_one_index+1:level_two_index-2)
View(test)
View(hdi.stat)
test=hdi.stat%>%slice(level_one_index+1:level_two_index-2)%>%mutate(level=level_one)
View(test)
test=hdi.stat%>%slice(level_two_index+1:level_three_index-2)%>%mutate(level=level_two),
test=hdi.stat%>%slice(level_two_index+1:level_three_index-2)%>%mutate(level=level_two)
level_three_index= which(hdi.stat$Country==level_three)
level_four_index=which(hdi.stat$Country==level_four)
test=hdi.stat%>%slice(level_two_index+1:level_three_index-2)%>%mutate(level=level_two)
View(test)
level_two_index= which(hdi.stat$Country==level_two)
test=hdi.stat%>%slice((level_one_index+1):(level_two_index-1))%>%mutate(level=level_one),
test=hdi.stat%>%slice((level_two_index+1):level_three_index-2)%>%mutate(level=level_two)
test=hdi.stat%>%slice((level_one_index+1):(level_two_index-1))%>%mutate(level=level_one)
View(test)
test=hdi.stat%>%slice((level_two_index+1):(level_three_index-1))%>%mutate(level=level_two)
View(test)
test=hdi.stat%>%slice((level_three_index+1):(level_four_index-1))%>%mutate(level=level_two)
View(test)
test=hdi.stat%>%slice((level_four_index+1):nrow(hdi.stat))%>%mutate(level=level_two)
View(test)
test=rbind(hdi.stat%>%slice((level_one_index+1):(level_two_index-1))%>%mutate(level=level_one),
hdi.stat%>%slice((level_two_index+1):(level_three_index-1))%>%mutate(level=level_two),
hdi.stat%>%slice((level_three_index+1):(level_four_index-1))%>%mutate(level=level_two),
hdi.stat%>%slice((level_four_index+1):nrow(hdi.stat))%>%mutate(level=level_two))
View(test)
test=rbind(hdi.stat%>%slice((level_one_index+1):(level_two_index-1))%>%mutate(level=level_one),
hdi.stat%>%slice((level_two_index+1):(level_three_index-1))%>%mutate(level=level_two),
hdi.stat%>%slice((level_three_index+1):(level_four_index-1))%>%mutate(level=level_three),
hdi.stat%>%slice((level_four_index+1):nrow(hdi.stat))%>%mutate(level=level_four))
View(test)
View(test)
hdi.stat.m=rbind(hdi.stat%>%slice((level_one_index+1):(level_two_index-1))%>%mutate(level=level_one),
hdi.stat%>%slice((level_two_index+1):(level_three_index-1))%>%mutate(level=level_two),
hdi.stat%>%slice((level_three_index+1):(level_four_index-1))%>%mutate(level=level_three),
hdi.stat%>%slice((level_four_index+1):nrow(hdi.stat))%>%mutate(level=level_four))
temp1 <- tempfile()
download.file("http://hdr.undp.org/sites/default/files/2018_all_indicators.xlsx",temp1, mode="wb")
hdi.databank <- readxl::read_xlsx(temp1,sheet = 1)
unlink(temp1)
year=as.character(seq(1990,2017))
hdi.databank=hdi.databank%>%select(-"9999")%>%gather(one_of(year),key = "year",value = "hdi")
math(hdi.databank$country_name,hdi.stat.m$Country)
match(hdi.databank$country_name,hdi.stat.m$Country)
View(hdi.databank)
hdi.databank%>%mutate(level=hdi.stat.m$level[match(hdi.databank$country_name,hdi.stat.m$Country)])
View(hdi.databank)
test=hdi.databank%>%mutate(level=hdi.stat.m$level[match(hdi.databank$country_name,hdi.stat.m$Country)])
View(test)
which(is.na(hdi.stat.m$level))
is.na(hdi.stat.m$level)
which(is.na(test$level))
View(test)
View(test)
test=hdi.databank%>%mutate(level=hdi.stat.m$level[match(hdi.databank$country_name,hdi.stat.m$Country)])%>%
filter(!is.na(level))
test=hdi.databank%>%mutate(level=hdi.stat.m$level[match(hdi.databank$country_name,hdi.stat.m$Country)])
%>%filter(!is.na(level))
test=hdi.databank%>%mutate(level=hdi.stat.m$level[match(hdi.databank$country_name,hdi.stat.m$Country)])%>%filter(!is.na(level))
library(tidyverse)
test=hdi.databank%>%mutate(level=hdi.stat.m$level[match(hdi.databank$country_name,hdi.stat.m$Country)])%>%filter(!is.na(level))
View(test)
which(is.na(test$level))
hdi.databank.m=hdi.databank%>%mutate(level=hdi.stat.m$level[match(hdi.databank$country_name,hdi.stat.m$Country)])%>%filter(!is.na(level))
library(openxlsx)
data<-read.xlsx("http://hdr.undp.org/sites/default/files/2018_all_indicators.xlsx")
View(data)
hdi.stat=read.xlsx("http://hdr.undp.org/sites/default/files/2018_statistical_annex_all.xlsx",sheet = 1,range="A3:M198")
library(readxl)
hdi.stat=read.xlsx("http://hdr.undp.org/sites/default/files/2018_statistical_annex_all.xlsx",sheet = 1,range="A3:M198")
hdi.stat=readxl::read.xlsx("http://hdr.undp.org/sites/default/files/2018_statistical_annex_all.xlsx",sheet = 1,range="A3:M198")
hdi.stat=readxl::read_xlsx("http://hdr.undp.org/sites/default/files/2018_statistical_annex_all.xlsx",
sheet = 1,range = "A3:M198")
hdi.stat=readxl::read_xlsx("http://hdr.undp.org/sites/default/files/2018_statistical_annex_all.xlsx",
sheet = 1,range = "A3:M198",mode="wb")
hdi.stat=read.xlsx("http://hdr.undp.org/sites/default/files/2018_statistical_annex_all.xlsx",
sheet = 1,namedRegin = "A3:M198")
View(hdi.databank.m)
View(hdi.databank.m)
library(openxlsx)
library(tidyverse)
hdi.databank=read.xlsx("http://hdr.undp.org/sites/default/files/2018_all_indicators.xlsx")
temp2 <- tempfile()
download.file("http://hdr.undp.org/sites/default/files/2018_statistical_annex_all.xlsx",temp2, mode="wb")
hdi.stat <- readxl::read_xlsx(temp2,sheet = 1,range = "A3:M198")
unlink(temp2)
rm(temp1,temp2)
###tidy table hdi.databank
year=as.character(seq(1990,2017))
hdi.databank=hdi.databank%>%select(-"9999")%>%gather(one_of(year),key = "year",value = "hdi")
###tidy table hdi.stat
colnames(hdi.stat)=gsub(" ",".",colnames(hdi.stat))
colnames(hdi.stat)[c(1,2)]=c("HDI.rank","Country")
hdi.stat%>%slice(-c(1,2))%>%select(-c(4,6,8,10,12))->hdi.stat
level_one <- hdi.stat %>% select(Country) %>% filter (startsWith(Country,'VERY')) %>% pull
level_two <- hdi.stat %>% select(Country) %>% filter (startsWith(Country,'HIGH')) %>% pull
level_three <- hdi.stat %>% select(Country) %>% filter (startsWith(Country,'MEDIUM')) %>% pull
level_four <- hdi.stat %>% select(Country) %>% filter (startsWith(Country,'LOW')) %>% pull
level_one_index= which(hdi.stat$Country==level_one)
level_two_index= which(hdi.stat$Country==level_two)
level_three_index= which(hdi.stat$Country==level_three)
level_four_index=which(hdi.stat$Country==level_four)
hdi.stat.m=rbind(hdi.stat%>%slice((level_one_index+1):(level_two_index-1))%>%mutate(level=level_one),
hdi.stat%>%slice((level_two_index+1):(level_three_index-1))%>%mutate(level=level_two),
hdi.stat%>%slice((level_three_index+1):(level_four_index-1))%>%mutate(level=level_three),
hdi.stat%>%slice((level_four_index+1):nrow(hdi.stat))%>%mutate(level=level_four))
#merge level information from hdi.stat table
hdi.databank.m=hdi.databank%>%mutate(level=hdi.stat.m$level[match(hdi.databank$country_name,hdi.stat.m$Country)])%>%filter(!is.na(level))
#add region column to hdi.databank.m
hdi.databank.m$Region=rep(".",nrow(hdi.databank.m))
### East Asia and Pacific
hdi.hdi.databank.mbank.m[which(hdi.databank.m$country_name %in% c("Australia","Brunei Darussalam","Cambodia","China","Fiji",
"Hong Kong, China (SAR)","Indonesia","Japan","Kiribati",
"Korea (Republic of)", "Lao People's Democratic Republic",
"Malaysia","Micronesia (Federated States of)","Mongolia",
"Samoa","Singapore","Solomon Islands", "Thailand", "Timor-Leste",
"Tonga","Vanuatu", "Viet Nam")),]$Region="East Asia and Pacific"
### Europe and Central Asia
hdi.databank.m[which(hdi.databank.m$country_name %in% c("Moldova (Republic of)","Albania","Andorra","Bulgaria","Latvia",
"Armenia","Austria","Azerbaijan","Belarus","Belgium","Bosnia and Herzegovina",
"Croatia","Cyprus","Czech Republic","Denmark","Estonia","Finland","France",
"Georgia","Germany","Greece","Hungary","Iceland","Ireland","Italy","Kazakhstan",
"Kyrgyzstan","Liechtenstein","Lithuania","Luxembourg","Montenegro","Netherlands",
"The former Yugoslav Republic of Macedonia","Norway","Poland","Portugal","Romania",
"Russian Federation","Serbia","Slovakia","Slovenia","Spain","Sweden","Switzerland",
"Tajikistan","Turkey","Turkmenistan","Ukraine","United Kingdom","Uzbekistan")),]$Region="Europe and Central Asia"
### Latin America and the Caribbean
hdi.databank.m[which(hdi.databank.m$country_name %in% c("Antigua and Barbuda","Argentina","Bahamas","Barbados","Belize","Bolivia (Plurinational State of)",
"Brazil","Costa Rica","Chile","Colombia","Cuba","Dominica","Dominican Republic","Ecuador","El Salvador",
"Grenada","Guatemala","Guyana","Haiti","Honduras","Jamaica","Mexico","Nicaragua","Panama","Paraguay",
"Peru","Puerto Rico","Saint Kitts and Nevis","Saint Lucia","Saint Vincent and the Grenadines","Suriname",
"Trinidad and Tobago","Uruguay","Venezuela (Bolivarian Republic of)")),]$Region="Latin America and the Caribbean"
### Sub-Saharan Africa
hdi.databank.m[which(hdi.databank.m$country_name %in% c ("Angola","Benin","Botswana","Burkina Faso","Burundi","Cabo Verde","Cameroon","Chad","Central African Republic",
"Comoros","Congo (Democratic Republic of the)","Congo","Equatorial Guinea","Eritrea","Ethiopia","Gabon","Gambia","Swaziland",
"Ghana","Papua New Guinea","Guinea-Bissau","Kenya","Lesotho","Liberia","Madagascar","Malawi","Mali","Mauritania",
"Mauritius","Mozambique","Namibia","Niger","Nigeria","Rwanda","Sao Tome and Principe","Senegal","Seychelles","Guinea",
"Sierra Leone","South Africa","South Sudan","Sudan","Tanzania (United Republic of)","Togo","Uganda","Zambia","Zimbabwe")),]$Region="Sub-Saharan Africa"
### South Asia
hdi.databank.m[which(hdi.databank.m$country_name %in% c ("Afghanistan","Bangladesh","Bhutan","India","Maldives","Nepal","Pakistan","Sri Lanka","Palestine, State of")),]$Region="South Asia"
### Arab States
hdi.databank.m[which(hdi.databank.m$country_name %in% c ("Algeria","Bahrain","Djibouti","Egypt","Iran (Islamic Republic of)","Iraq","Jordan","Kuwait","Lebanon","Libya","Malta","Morocco",
"Israel","Oman","Qatar","Saudi Arabia","Syrian Arab Republic","Tunisia","United Arab Emirates","Yemen")),]$Region="Arab State"
View(hdi.databank.m)
View(hdi.databank.m)
#Simulates an AR(1) process with phi=0.7, contaminates it with an AO of magnitude 5
a=rnorm(200)
#non-seasonal models
x<-arima.sim(200,model=list(order=c(1,0,0),ar=0.7),innov=a)
I=numeric(200)
I[50]=5
x2=x+I
fit<-arima(x,order=c(1,0,0),transform.pars=FALSE,fixed=c(0.7,0))
fit1<-arima(x2,order=c(1,0,0),transform.pars=FALSE,fixed=c(0.7,0))
##
# Simulates an SARIMA (0,1,1)(0,1,1) and contaminates it with an AO
#x<-sim_sarima(200,model=list(ma=-0.5,sma=-0.6,iorder=1,siorder=1,nseasons=12),innov=a)
#I=numeric(200)
#I[50]=5
#x2=x+I
#fit<-arima(x,order=c(0,1,1),seasonal=c(0,1,1),fixed=c(-0.5,-0.6))
#fit1<-arima(x2,order=c(0,1,1),seasonal=c(0,1,1),fixed=c(-0.5,-0.6))
#
#Plots
par(mfrow= c(3,2))
plot(x,main="Uncontaminated series", type="l")
plot(x2,main="Contaminated series", type="l")
plot(fit$resid,main="Uncontaminated residuals", type="l")
plot(fit1$resid,main="Contaminated residuals", type="l")
acf(x,main="Uncontaminated series")
acf(x2,main="Contaminated series")
x<-sim_sarima(200,model=list(ma=-0.5,sma=-0.6,iorder=1,siorder=1,nseasons=12),innov=a)
I=numeric(200)
I[50]=5
x2=x+I
fit<-arima(x,order=c(0,1,1),seasonal=c(0,1,1),fixed=c(-0.5,-0.6))
fit1<-arima(x2,order=c(0,1,1),seasonal=c(0,1,1),fixed=c(-0.5,-0.6))
#Plots
par(mfrow= c(3,2))
plot(x,main="Uncontaminated series", type="l")
plot(x2,main="Contaminated series", type="l")
plot(fit$resid,main="Uncontaminated residuals", type="l")
plot(fit1$resid,main="Contaminated residuals", type="l")
acf(x,main="Uncontaminated series")
acf(x2,main="Contaminated series")
install.packages(sarima)
install.packages('sarima')
#Simulates an AR(1) process with phi=0.7, contaminates it with an AO of magnitude 5
a=rnorm(200)
a2=a
a2[50]=5
x<-arima.sim(200,model=list(order=c(1,0,0),ar=0.7),innov=a)
x2<-arima.sim(200,model=list(order=c(1,0,0),ar=0.7),innov=a2)
#fit<-arima(x,order=c(1,0,0),transform.pars=FALSE,fixed=c(0.7,0))
#fit1<-arima(x2,order=c(1,0,0),transform.pars=FALSE,fixed=c(0.7,0))
fit<-forecase::auto.arima(x)
fit1<-forecase::auto.arima(x2)
##
# Simulates an SARIMA (0,1,1)(0,1,1) and contaminates it with an AO
#x<-sim_sarima(200,model=list(ma=-0.5,sma=-0.5,iorder=1,siorder=1,nseasons=12),innov=a)
#x2<-sim_sarima(200,model=list(ma=-0.5,sma=-0.5,iorder=1,siorder=1,nseasons=12),innov=a2)
#fit<-arima(x,order=c(0,1,1),seasonal=c(0,1,1),fixed=c(-0.5,-0.6))
#fit1<-arima(x2,order=c(0,1,1),seasonal=c(0,1,1),fixed=c(-0.5,-0.6))
#
#Plots
par(mfrow= c(3,2))
plot(x,main="Uncontaminated series", type="l")
plot(x2,main="Contaminated series", type="l")
plot(fit$resid,main="Uncontaminated residuals", type="l")
plot(fit1$resid,main="Contaminated residuals", type="l")
acf(x,main="Uncontaminated series")
acf(x2,main="Contaminated series")
fit
fit1
#Simulates an AR(1) process with phi=0.7, contaminates it with an AO of magnitude 5
a=rnorm(200)
a2=a
a2[50]=15
x<-arima.sim(200,model=list(order=c(1,0,0),ar=0.7),innov=a)
x2<-arima.sim(200,model=list(order=c(1,0,0),ar=0.7),innov=a2)
#fit<-arima(x,order=c(1,0,0),transform.pars=FALSE,fixed=c(0.7,0))
#fit1<-arima(x2,order=c(1,0,0),transform.pars=FALSE,fixed=c(0.7,0))
fit<-forecase::auto.arima(x)
fit1<-forecase::auto.arima(x2)
##
# Simulates an SARIMA (0,1,1)(0,1,1) and contaminates it with an AO
#x<-sim_sarima(200,model=list(ma=-0.5,sma=-0.5,iorder=1,siorder=1,nseasons=12),innov=a)
#x2<-sim_sarima(200,model=list(ma=-0.5,sma=-0.5,iorder=1,siorder=1,nseasons=12),innov=a2)
#fit<-arima(x,order=c(0,1,1),seasonal=c(0,1,1),fixed=c(-0.5,-0.6))
#fit1<-arima(x2,order=c(0,1,1),seasonal=c(0,1,1),fixed=c(-0.5,-0.6))
#
#Plots
par(mfrow= c(3,2))
plot(x,main="Uncontaminated series", type="l")
plot(x2,main="Contaminated series", type="l")
plot(fit$resid,main="Uncontaminated residuals", type="l")
plot(fit1$resid,main="Contaminated residuals", type="l")
acf(x,main="Uncontaminated series")
acf(x2,main="Contaminated series")
fit
fit1
a=rnorm(200)
a2=a
a2[50]=50
x<-arima.sim(200,model=list(order=c(1,0,0),ar=0.7),innov=a)
x2<-arima.sim(200,model=list(order=c(1,0,0),ar=0.7),innov=a2)
#fit<-arima(x,order=c(1,0,0),transform.pars=FALSE,fixed=c(0.7,0))
#fit1<-arima(x2,order=c(1,0,0),transform.pars=FALSE,fixed=c(0.7,0))
fit<-forecase::auto.arima(x)
fit1<-forecase::auto.arima(x2)
fit;fit1
a=rnorm(200)
a2=a
a2[50]=50
x<-arima.sim(200,model=list(order=c(1,0,0),ar=0.7),innov=a)
x2<-arima.sim(200,model=list(order=c(1,0,0),ar=0.7),innov=a2)
#fit<-arima(x,order=c(1,0,0),transform.pars=FALSE,fixed=c(0.7,0))
#fit1<-arima(x2,order=c(1,0,0),transform.pars=FALSE,fixed=c(0.7,0))
fit<-forecase::auto.arima(x)
fit1<-forecase::auto.arima(x2)
fit;fit1
a=rnorm(200)
a2=a
a2[50]=50
x<-arima.sim(200,model=list(order=c(1,0,0),ar=0.7),innov=a)
x2<-arima.sim(200,model=list(order=c(1,0,0),ar=0.7),innov=a2)
#fit<-arima(x,order=c(1,0,0),transform.pars=FALSE,fixed=c(0.7,0))
#fit1<-arima(x2,order=c(1,0,0),transform.pars=FALSE,fixed=c(0.7,0))
fit<-forecast::auto.arima(x)
fit1<-forecast::auto.arima(x2)
fit;fit1
library(forcast)
library(forecast)
tso(x,cval=3.6,type="AO")
install.packages("tsoutlier")
install.packages("tsoutliers")
tso(x,cval=3.6,type="AO")
tsoutliers::tso(x,cval=3.6,type="AO")
tsoutliers::tso(x,cval=3.6,type=c("AO",'IO',"LS","TC"))
tsoutliers::tso(x2,cval=3.6,type=c("AO",'IO',"LS","TC"))
tsoutliers::tso(x,cval=3.6,type=c("AO",'IO',"LS","TC"))
#Simulates an AR(1) process with phi=0.7, contaminates it with an AO of magnitude 5
a=rnorm(200)
a2=a
a2[50]=5
x<-arima.sim(200,model=list(order=c(1,0,0),ar=0.7),innov=a)
x2<-arima.sim(200,model=list(order=c(1,0,0),ar=0.7),innov=a2)
tsoutliers::tso(x2,cval=3.6,type=c("AO",'IO',"LS","TC"))
#Simulates an AR(1) process with phi=0.7, contaminates it with an AO of magnitude 5
a=rnorm(200)
a2=a
a2[50]=50
x<-arima.sim(200,model=list(order=c(1,0,0),ar=0.7),innov=a)
x2<-arima.sim(200,model=list(order=c(1,0,0),ar=0.7),innov=a2)
tsoutliers::tso(x2,cval=3.6,type=c("AO",'IO',"LS","TC"))
a=rnorm(200)
a2=a
a2[50]=50
a2[55]=5
a2[57]=5
x<-arima.sim(200,model=list(order=c(1,0,0),ar=0.7),innov=a)
x2<-arima.sim(200,model=list(order=c(1,0,0),ar=0.7),innov=a2)
tsoutliers::tso(x2,cval=3.6,type=c("AO",'IO',"LS","TC"))
a=rnorm(200)
a2=a
a2[50]=5
a2[55]=5
a2[57]=5
x<-arima.sim(200,model=list(order=c(1,0,0),ar=0.7),innov=a)
x2<-arima.sim(200,model=list(order=c(1,0,0),ar=0.7),innov=a2)
tsoutliers::tso(x2,cval=3.6,type=c("AO",'IO',"LS","TC"))
