filter(country_name %in% heal.geography.in) %>%
filter((year>= date_from) &(year<= date_to)) %>%
replace_na(list(hdi=0))%>%
group_by(country_name,indicator_name)%>%summarise(avg = mean(hdi))
colnames(heal.overview2)[1]="Region"
heal.overview <- rbind(heal.overview1,heal.overview2)
# heal.overview %>%
#   mutate_at(vars(avg),funs(rescale))
heal.overview.final=heal.overview%>%spread(indicator_name,avg)
colnames(heal.overview.final)[1]="geo"
colnames(heal.overview.final)=gsub(" ",".",colnames(heal.overview.final))
colnames(heal.overview.final)=gsub(",","",colnames(heal.overview.final))
#colnames(heal.overview.final)=gsub("(","",colnames(heal.overview.final))
#colnames(heal.overview.final)=gsub(")","",colnames(heal.overview.final))
heal.overview.final=heal.overview.final[,c("geo",
"Current.health.expenditure.(%.of.GDP)",
"HIV.prevalence.adult.(%.ages.15-49)",
"Life.expectancy.at.birth.(years)",
"Mortality.rate.infant.(per.1000.live.births)",
"Mortality.rate.under-five.(per.1000.live.births)")]
heal.overview.final[is.na(heal.overview.final)]=0
heal.overview.final$`HIV.prevalence.adult.(%.ages.15-49)`=heal.overview.final$`HIV.prevalence.adult.(%.ages.15-49)`*10
colnames(heal.overview.final)[3]="HIV.prevalence.adult.(‰.ages.15-49)"
ggradar(heal.overview.final,grid.mid = 50,grid.max = 100)
}else{
heal.overview <- hdi.databank.m %>%
filter( level %in% heal.level.in) %>%
filter((year>= date_from) & (year<= date_to)) %>%
replace_na(list(hdi=0))%>%
group_by(level,indicator_name)%>%summarise(avg = mean(hdi))
heal.overview.final=heal.overview%>%spread(indicator_name,avg)
colnames(heal.overview.final)=gsub(" ",".",colnames(heal.overview.final))
colnames(heal.overview.final)=gsub(",","",colnames(heal.overview.final))
#colnames(heal.overview.final)=gsub("(","",colnames(heal.overview.final))
#colnames(heal.overview.final)=gsub(")","",colnames(heal.overview.final))
heal.overview.final=heal.overview.final[,c("level",
"Current.health.expenditure.(%.of.GDP)",
"HIV.prevalence.adult.(%.ages.15-49)",
"Life.expectancy.at.birth.(years)",
"Mortality.rate.infant.(per.1000.live.births)",
"Mortality.rate.under-five.(per.1000.live.births)")]
heal.overview.final[is.na(heal.overview.final)]=0
heal.overview.final$`HIV.prevalence.adult.(%.ages.15-49)`=heal.overview.final$`HIV.prevalence.adult.(%.ages.15-49)`*10
colnames(heal.overview.final)[3]="HIV.prevalence.adult.(‰.ages.15-49)"
ggradar(heal.overview.final,grid.mid = 50,grid.max = 100)
}
}
heal.level.in=c("VERY HIGH HUMAN DEVELOPMENT","LOW HUMAN DEVELOPMENT")
heal.overview.test=heal_radar_fun(heal.level.in,date_from=2013,date_to=2016)
heal.overview.test
library(openxlsx)
library(tidyverse)
library(ggplot2)
library(scales)
library(ggradar)
hdi.databank=read.xlsx("http://hdr.undp.org/sites/default/files/2018_all_indicators.xlsx")
temp2 <- tempfile()
download.file("http://hdr.undp.org/sites/default/files/2018_statistical_annex_all.xlsx",temp2, mode="wb")
hdi.stat <- readxl::read_xlsx(temp2,sheet = 1,range = "A3:M198")
unlink(temp2)
rm(temp2)
###tidy table hdi.databank
year=as.character(seq(1990,2017))
hdi.databank=hdi.databank%>%select(-"9999")%>%gather(one_of(year),key = "year",value = "hdi")
###tidy table hdi.stat
colnames(hdi.stat)=gsub(" ",".",colnames(hdi.stat))
colnames(hdi.stat)[c(1,2)]=c("HDI.rank","Country")
hdi.stat%>%slice(-c(1,2))%>%select(-c(4,6,8,10,12))->hdi.stat
level_one <- hdi.stat %>% select(Country) %>% filter (startsWith(Country,'VERY')) %>% pull
level_two <- hdi.stat %>% select(Country) %>% filter (startsWith(Country,'HIGH')) %>% pull
level_three <- hdi.stat %>% select(Country) %>% filter (startsWith(Country,'MEDIUM')) %>% pull
level_four <- hdi.stat %>% select(Country) %>% filter (startsWith(Country,'LOW')) %>% pull
level_one_index= which(hdi.stat$Country==level_one)
level_two_index= which(hdi.stat$Country==level_two)
level_three_index= which(hdi.stat$Country==level_three)
level_four_index=which(hdi.stat$Country==level_four)
hdi.stat.m=rbind(hdi.stat%>%slice((level_one_index+1):(level_two_index-1))%>%mutate(level=level_one),
hdi.stat%>%slice((level_two_index+1):(level_three_index-1))%>%mutate(level=level_two),
hdi.stat%>%slice((level_three_index+1):(level_four_index-1))%>%mutate(level=level_three),
hdi.stat%>%slice((level_four_index+1):nrow(hdi.stat))%>%mutate(level=level_four))
#merge level information from hdi.stat table
hdi.databank.m=hdi.databank%>%mutate(level=hdi.stat.m$level[match(hdi.databank$country_name,hdi.stat.m$Country)])%>%filter(!is.na(level))
#add region column to hdi.databank.m
hdi.databank.m$Region=rep(".",nrow(hdi.databank.m))
### East Asia and Pacific
hdi.databank.m[which(hdi.databank.m$country_name %in% c("Australia","Brunei Darussalam","Cambodia","China","Fiji",
"Hong Kong, China (SAR)","Indonesia","Japan","Kiribati",
"Korea (Republic of)", "Lao People's Democratic Republic",
"Malaysia","Marshall Islands","Myanmar","Micronesia (Federated States of)","Mongolia",
"New Zealand","Palau","Philippines","Samoa","Singapore","Solomon Islands", "Thailand", "Timor-Leste",
"Tonga","Vanuatu", "Viet Nam")),]$Region="East Asia and Pacific"
### Europe and Central Asia
hdi.databank.m[which(hdi.databank.m$country_name %in% c("Moldova (Republic of)","Albania","Andorra","Bulgaria","Latvia",
"Armenia","Austria","Azerbaijan","Belarus","Belgium","Bosnia and Herzegovina",
"Croatia","Cyprus","Czech Republic","Czechia","Denmark","Estonia","Finland","France",
"Georgia","Germany","Greece","Hungary","Iceland","Ireland","Italy","Kazakhstan",
"Kyrgyzstan","Liechtenstein","Lithuania","Luxembourg","Montenegro","Netherlands",
"The former Yugoslav Republic of Macedonia","Norway","Poland","Portugal","Romania",
"Russian Federation","Serbia","Slovakia","Slovenia","Spain","Sweden","Switzerland",
"Tajikistan","Turkey","Turkmenistan","Ukraine","United Kingdom","Uzbekistan")),]$Region="Europe and Central Asia"
### Latin America and the Caribbean
hdi.databank.m[which(hdi.databank.m$country_name %in% c("Antigua and Barbuda","Argentina","Bahamas","Barbados","Belize","Bolivia (Plurinational State of)",
"Brazil","Costa Rica","Chile","Colombia","Cuba","Dominica","Dominican Republic","Ecuador","El Salvador",
"Grenada","Guatemala","Guyana","Haiti","Honduras","Jamaica","Mexico","Nicaragua","Panama","Paraguay",
"Peru","Puerto Rico","Saint Kitts and Nevis","Saint Lucia","Saint Vincent and the Grenadines","Suriname",
"Trinidad and Tobago","Uruguay","Venezuela (Bolivarian Republic of)")),]$Region="Latin America and the Caribbean"
### North America
hdi.databank.m[which(hdi.databank.m$country_name %in% c("Canada","United States")),]$Region="North America"
### Africa
hdi.databank.m[which(hdi.databank.m$country_name %in% c ("Angola","Benin","Botswana","Burkina Faso","Burundi","Cabo Verde","Cameroon","Chad","Central African Republic",
"Eswatini (Kingdom of)","Côte d'Ivoire","Comoros","Congo (Democratic Republic of the)","Congo","Equatorial Guinea","Eritrea","Ethiopia","Gabon","Gambia","Swaziland",
"Ghana","Papua New Guinea","Guinea-Bissau","Kenya","Lesotho","Liberia","Madagascar","Malawi","Mali","Mauritania",
"Mauritius","Mozambique","Namibia","Niger","Nigeria","Rwanda","Sao Tome and Principe","Senegal","Seychelles","Guinea",
"Sierra Leone","South Africa","South Sudan","Sudan","Tanzania (United Republic of)","Togo","Uganda","Zambia","Zimbabwe")),]$Region="Africa"
### South Asia
hdi.databank.m[which(hdi.databank.m$country_name %in% c ("Afghanistan","Bangladesh","Bhutan","India","Maldives","Nepal","Pakistan","Sri Lanka","Palestine, State of")),]$Region="South Asia"
### Arab States
hdi.databank.m[which(hdi.databank.m$country_name %in% c ("Algeria","Bahrain","Djibouti","Egypt","Iran (Islamic Republic of)","Iraq","Jordan","Kuwait","Lebanon","Libya","Malta","Morocco",
"Israel","Oman","Qatar","Saudi Arabia","Syrian Arab Republic","Tunisia","United Arab Emirates","Yemen")),]$Region="Arab State"
##############################################################
#generate radar plot for health overview
heal_radar_fun=function(heal.level.in,heal.geography.in,date_from,date_to){
if (is.null(heal.level.in)==TRUE){
heal.overview1 <- hdi.databank.m %>%
filter( Region %in% heal.geography.in) %>%
filter((year>= date_from) & (year<= date_to)) %>%
replace_na(list(hdi=0))%>%
group_by(Region,indicator_name)%>%summarise(avg = mean(hdi))
heal.overview2 <- hdi.databank.m %>%
filter(country_name %in% heal.geography.in) %>%
filter((year>= date_from) &(year<= date_to)) %>%
replace_na(list(hdi=0))%>%
group_by(country_name,indicator_name)%>%summarise(avg = mean(hdi))
colnames(heal.overview2)[1]="Region"
heal.overview <- rbind(heal.overview1,heal.overview2)
# heal.overview %>%
#   mutate_at(vars(avg),funs(rescale))
heal.overview.final=heal.overview%>%spread(indicator_name,avg)
colnames(heal.overview.final)[1]="geo"
colnames(heal.overview.final)=gsub(" ",".",colnames(heal.overview.final))
colnames(heal.overview.final)=gsub(",","",colnames(heal.overview.final))
#colnames(heal.overview.final)=gsub("(","",colnames(heal.overview.final))
#colnames(heal.overview.final)=gsub(")","",colnames(heal.overview.final))
heal.overview.final=heal.overview.final[,c("geo",
"Current.health.expenditure.(%.of.GDP)",
"HIV.prevalence.adult.(%.ages.15-49)",
"Life.expectancy.at.birth.(years)",
"Mortality.rate.infant.(per.1000.live.births)",
"Mortality.rate.under-five.(per.1000.live.births)")]
heal.overview.final[is.na(heal.overview.final)]=0
heal.overview.final$`HIV.prevalence.adult.(%.ages.15-49)`=heal.overview.final$`HIV.prevalence.adult.(%.ages.15-49)`*10
colnames(heal.overview.final)[3]="HIV.prevalence.adult.(‰.ages.15-49)"
ggradar(heal.overview.final,grid.mid = 50,grid.max = 100)
}else{
heal.overview <- hdi.databank.m %>%
filter( level %in% heal.level.in) %>%
filter((year>= date_from) & (year<= date_to)) %>%
replace_na(list(hdi=0))%>%
group_by(level,indicator_name)%>%summarise(avg = mean(hdi))
heal.overview.final=heal.overview%>%spread(indicator_name,avg)
colnames(heal.overview.final)=gsub(" ",".",colnames(heal.overview.final))
colnames(heal.overview.final)=gsub(",","",colnames(heal.overview.final))
#colnames(heal.overview.final)=gsub("(","",colnames(heal.overview.final))
#colnames(heal.overview.final)=gsub(")","",colnames(heal.overview.final))
heal.overview.final=heal.overview.final[,c("level",
"Current.health.expenditure.(%.of.GDP)",
"HIV.prevalence.adult.(%.ages.15-49)",
"Life.expectancy.at.birth.(years)",
"Mortality.rate.infant.(per.1000.live.births)",
"Mortality.rate.under-five.(per.1000.live.births)")]
heal.overview.final[is.na(heal.overview.final)]=0
heal.overview.final$`HIV.prevalence.adult.(%.ages.15-49)`=heal.overview.final$`HIV.prevalence.adult.(%.ages.15-49)`*10
colnames(heal.overview.final)[3]="HIV.prevalence.adult.(‰.ages.15-49)"
ggradar(heal.overview.final,grid.mid = 50,grid.max = 100)
}
}
heal.level.in=c("VERY HIGH HUMAN DEVELOPMENT","LOW HUMAN DEVELOPMENT")
heal.overview.test=heal_radar_fun(heal.level.in,date_from=2013,date_to=2016)
heal.overview.test
runApp('hdi')
runApp('hdi')
runApp('hdi')
runApp('hdi')
runApp('hdi')
runApp('hdi')
shiny::runApp('hdi')
runApp('hdi')
runApp('hdi')
runApp('hdi')
runApp('hdi')
runApp('hdi')
runApp('hdi')
submitButton
runApp('hdi')
runApp('hdi')
runApp('hdi')
switch(input$heal.choice,
"heal.geography" = fluidRow(
h4(style = "margin-left: 20px; margin-bottom: 30px;", "Please choose inquiry geography"),
column(8,
pickerInput('heal.geography.in', 'Options', choices = list(Region = unique(hdi.databank.m$Region),Country = unique(hdi.databank.m$country_name)), multiple=TRUE, options = list(`max-options` = 4,size=10))
),
column(3, actionButton('go',"GO"),offset = 2),
column(3,actionButton("clean","Clean All"),offset = 2)
),
"heal.levels" =  fluidRow(
h4(style = "margin-left: 20px; margin-bottom: 30px;", "Please choose inquiry levels"),
column(8,
pickerInput('heal.level.in', 'Options', unique(hdi.databank.m$level), multiple=TRUE, options = list(`max-options` = 4))
),
column(3, actionButton('go',"GO"),offset = 2),
column(3,actionButton("clean","Clean All"),offset = 2)
)
)
runApp('hdi')
runApp('hdi')
runApp('hdi')
runApp('hdi')
runApp('hdi')
runApp('hdi')
runApp('hdi')
runApp('hdi')
runApp('hdi')
runApp('hdi')
heal_radar_fun=function(heal.level.in,heal.geography.in,date_from,date_to){
if (is.null(heal.level.in)==TRUE){
heal.overview1 <- hdi.databank.m %>%
filter( Region %in% heal.geography.in) %>%
filter((year>= date_from) & (year<= date_to)) %>%
replace_na(list(hdi=0))%>%
group_by(Region,indicator_name)%>%summarise(avg = mean(hdi))
heal.overview2 <- hdi.databank.m %>%
filter(country_name %in% heal.geography.in) %>%
filter((year>= date_from) &(year<= date_to)) %>%
replace_na(list(hdi=0))%>%
group_by(country_name,indicator_name)%>%summarise(avg = mean(hdi))
colnames(heal.overview2)[1]="Region"
heal.overview <- rbind(heal.overview1,heal.overview2)
# heal.overview %>%
#   mutate_at(vars(avg),funs(rescale))
heal.overview.final=heal.overview%>%spread(indicator_name,avg)
colnames(heal.overview.final)[1]="geo"
colnames(heal.overview.final)=gsub(" ",".",colnames(heal.overview.final))
colnames(heal.overview.final)=gsub(",","",colnames(heal.overview.final))
#colnames(heal.overview.final)=gsub("(","",colnames(heal.overview.final))
#colnames(heal.overview.final)=gsub(")","",colnames(heal.overview.final))
heal.overview.final=heal.overview.final[,c("geo",
"Current.health.expenditure.(%.of.GDP)",
"HIV.prevalence.adult.(%.ages.15-49)",
"Life.expectancy.at.birth.(years)",
"Mortality.rate.infant.(per.1000.live.births)",
"Mortality.rate.under-five.(per.1000.live.births)")]
heal.overview.final[is.na(heal.overview.final)]=0
heal.overview.final$`HIV.prevalence.adult.(%.ages.15-49)`=heal.overview.final$`HIV.prevalence.adult.(%.ages.15-49)`*10
colnames(heal.overview.final)[3]="HIV.prevalence.adult.(per.1000.ages.15-49)"
#ggradar(heal.overview.final,grid.mid = 50,grid.max = 100)
}else{
heal.overview <- hdi.databank.m %>%
filter( level %in% heal.level.in) %>%
filter((year>= date_from) & (year<= date_to)) %>%
replace_na(list(hdi=0))%>%
group_by(level,indicator_name)%>%summarise(avg = mean(hdi))
heal.overview.final=heal.overview%>%spread(indicator_name,avg)
colnames(heal.overview.final)=gsub(" ",".",colnames(heal.overview.final))
colnames(heal.overview.final)=gsub(",","",colnames(heal.overview.final))
#colnames(heal.overview.final)=gsub("(","",colnames(heal.overview.final))
#colnames(heal.overview.final)=gsub(")","",colnames(heal.overview.final))
heal.overview.final=heal.overview.final[,c("level",
"Current.health.expenditure.(%.of.GDP)",
"HIV.prevalence.adult.(%.ages.15-49)",
"Life.expectancy.at.birth.(years)",
"Mortality.rate.infant.(per.1000.live.births)",
"Mortality.rate.under-five.(per.1000.live.births)")]
heal.overview.final[is.na(heal.overview.final)]=0
heal.overview.final$`HIV.prevalence.adult.(%.ages.15-49)`=heal.overview.final$`HIV.prevalence.adult.(%.ages.15-49)`*10
colnames(heal.overview.final)[3]="HIV.prevalence.adult.(per.1000.ages.15-49)"
#ggradar(heal.overview.final,grid.mid = 50,grid.max = 100)
}
return(heal.overview.final)
}
#heal.level.in=as.null()
heal.level.in=c("VERY HIGH HUMAN DEVELOPMENT","LOW HUMAN DEVELOPMENT")
heal.overview.test=heal_radar_fun(heal.level.in,date_from=2013,date_to=2016)
View(heal.overview.test)
ggplot(data=heal.overview.test,mapping = aes(x=level,y=`HIV.prevalence.adult.(per.1000.ages.15-49)`))+geom_bar()
ggplot(data=heal.overview.test,mapping = aes(x=level,y=`HIV.prevalence.adult.(per.1000.ages.15-49)`))+geom_bar(stat="identity")
level_three
level_two
#heal.level.in=as.null()
heal.level.in=c("VERY HIGH HUMAN DEVELOPMENT","LOW HUMAN DEVELOPMENT","MEDIUM HUMAN DEVELOPMENT","HIGH HUMAN DEVELOPMENT")
heal.overview.test=heal_radar_fun(heal.level.in,date_from=2013,date_to=2016)
View(heal.overview.test)
ggplot(data=heal.overview.test,mapping = aes(x=level,y=`HIV.prevalence.adult.(per.1000.ages.15-49)`))+geom_bar(stat="identity")
ggplot(data=heal.overview.test,mapping = aes(x=level,y=`HIV.prevalence.adult.(per.1000.ages.15-49)`))+
geom_bar(stat="identity")+
coord_flip()
heal_plot_fun=function(heal.level.in,heal.geography.in,date_from,date_to,plot_type){
if (is.null(heal.level.in)==TRUE){
heal.overview1 <- hdi.databank.m %>%
filter( Region %in% heal.geography.in) %>%
filter((year>= date_from) & (year<= date_to)) %>%
replace_na(list(hdi=0))%>%
group_by(Region,indicator_name)%>%summarise(avg = mean(hdi))
heal.overview2 <- hdi.databank.m %>%
filter(country_name %in% heal.geography.in) %>%
filter((year>= date_from) &(year<= date_to)) %>%
replace_na(list(hdi=0))%>%
group_by(country_name,indicator_name)%>%summarise(avg = mean(hdi))
colnames(heal.overview2)[1]="Region"
heal.overview <- rbind(heal.overview1,heal.overview2)
# heal.overview %>%
#   mutate_at(vars(avg),funs(rescale))
heal.overview.final=heal.overview%>%spread(indicator_name,avg)
colnames(heal.overview.final)[1]="geo"
colnames(heal.overview.final)=gsub(" ",".",colnames(heal.overview.final))
colnames(heal.overview.final)=gsub(",","",colnames(heal.overview.final))
#colnames(heal.overview.final)=gsub("(","",colnames(heal.overview.final))
#colnames(heal.overview.final)=gsub(")","",colnames(heal.overview.final))
heal.overview.final=heal.overview.final[,c("geo",
"Current.health.expenditure.(%.of.GDP)",
"HIV.prevalence.adult.(%.ages.15-49)",
"Life.expectancy.at.birth.(years)",
"Mortality.rate.infant.(per.1000.live.births)",
"Mortality.rate.under-five.(per.1000.live.births)")]
heal.overview.final[is.na(heal.overview.final)]=0
heal.overview.final$`HIV.prevalence.adult.(%.ages.15-49)`=heal.overview.final$`HIV.prevalence.adult.(%.ages.15-49)`*10
colnames(heal.overview.final)[3]="HIV.prevalence.adult.(per.1000.ages.15-49)"
radar=ggradar(heal.overview.final,grid.mid = 50,grid.max = 100)
hiv.plot=ggplot(data=heal.overview.final,mapping = aes(x=geo,y=`HIV.prevalence.adult.(per.1000.ages.15-49)`))+
geom_bar(stat="identity")+
coord_flip()
}else{
heal.overview <- hdi.databank.m %>%
filter( level %in% heal.level.in) %>%
filter((year>= date_from) & (year<= date_to)) %>%
replace_na(list(hdi=0))%>%
group_by(level,indicator_name)%>%summarise(avg = mean(hdi))
heal.overview.final=heal.overview%>%spread(indicator_name,avg)
colnames(heal.overview.final)=gsub(" ",".",colnames(heal.overview.final))
colnames(heal.overview.final)=gsub(",","",colnames(heal.overview.final))
#colnames(heal.overview.final)=gsub("(","",colnames(heal.overview.final))
#colnames(heal.overview.final)=gsub(")","",colnames(heal.overview.final))
heal.overview.final=heal.overview.final[,c("level",
"Current.health.expenditure.(%.of.GDP)",
"HIV.prevalence.adult.(%.ages.15-49)",
"Life.expectancy.at.birth.(years)",
"Mortality.rate.infant.(per.1000.live.births)",
"Mortality.rate.under-five.(per.1000.live.births)")]
heal.overview.final[is.na(heal.overview.final)]=0
heal.overview.final$`HIV.prevalence.adult.(%.ages.15-49)`=heal.overview.final$`HIV.prevalence.adult.(%.ages.15-49)`*10
colnames(heal.overview.final)[3]="HIV.prevalence.adult.(per.1000.ages.15-49)"
radar=ggradar(heal.overview.final,grid.mid = 50,grid.max = 100)
hiv.plot=ggplot(data=heal.overview.final,mapping = aes(x=level,y=`HIV.prevalence.adult.(per.1000.ages.15-49)`))+
geom_bar(stat="identity")+
coord_flip()
}
if(plot_type="radar")
return(radar)
if(plot_type="hiv.plot")
return(hiv.plot)
}
heal_plot_fun=function(heal.level.in,heal.geography.in,date_from,date_to,plot_type){
if (is.null(heal.level.in)==TRUE){
heal.overview1 <- hdi.databank.m %>%
filter( Region %in% heal.geography.in) %>%
filter((year>= date_from) & (year<= date_to)) %>%
replace_na(list(hdi=0))%>%
group_by(Region,indicator_name)%>%summarise(avg = mean(hdi))
heal.overview2 <- hdi.databank.m %>%
filter(country_name %in% heal.geography.in) %>%
filter((year>= date_from) &(year<= date_to)) %>%
replace_na(list(hdi=0))%>%
group_by(country_name,indicator_name)%>%summarise(avg = mean(hdi))
colnames(heal.overview2)[1]="Region"
heal.overview <- rbind(heal.overview1,heal.overview2)
# heal.overview %>%
#   mutate_at(vars(avg),funs(rescale))
heal.overview.final=heal.overview%>%spread(indicator_name,avg)
colnames(heal.overview.final)[1]="geo"
colnames(heal.overview.final)=gsub(" ",".",colnames(heal.overview.final))
colnames(heal.overview.final)=gsub(",","",colnames(heal.overview.final))
#colnames(heal.overview.final)=gsub("(","",colnames(heal.overview.final))
#colnames(heal.overview.final)=gsub(")","",colnames(heal.overview.final))
heal.overview.final=heal.overview.final[,c("geo",
"Current.health.expenditure.(%.of.GDP)",
"HIV.prevalence.adult.(%.ages.15-49)",
"Life.expectancy.at.birth.(years)",
"Mortality.rate.infant.(per.1000.live.births)",
"Mortality.rate.under-five.(per.1000.live.births)")]
heal.overview.final[is.na(heal.overview.final)]=0
heal.overview.final$`HIV.prevalence.adult.(%.ages.15-49)`=heal.overview.final$`HIV.prevalence.adult.(%.ages.15-49)`*10
colnames(heal.overview.final)[3]="HIV.prevalence.adult.(per.1000.ages.15-49)"
radar=ggradar(heal.overview.final,grid.mid = 50,grid.max = 100)
hiv.plot=ggplot(data=heal.overview.final,mapping = aes(x=geo,y=`HIV.prevalence.adult.(per.1000.ages.15-49)`))+
geom_bar(stat="identity")+
coord_flip()
}else{
heal.overview <- hdi.databank.m %>%
filter( level %in% heal.level.in) %>%
filter((year>= date_from) & (year<= date_to)) %>%
replace_na(list(hdi=0))%>%
group_by(level,indicator_name)%>%summarise(avg = mean(hdi))
heal.overview.final=heal.overview%>%spread(indicator_name,avg)
colnames(heal.overview.final)=gsub(" ",".",colnames(heal.overview.final))
colnames(heal.overview.final)=gsub(",","",colnames(heal.overview.final))
#colnames(heal.overview.final)=gsub("(","",colnames(heal.overview.final))
#colnames(heal.overview.final)=gsub(")","",colnames(heal.overview.final))
heal.overview.final=heal.overview.final[,c("level",
"Current.health.expenditure.(%.of.GDP)",
"HIV.prevalence.adult.(%.ages.15-49)",
"Life.expectancy.at.birth.(years)",
"Mortality.rate.infant.(per.1000.live.births)",
"Mortality.rate.under-five.(per.1000.live.births)")]
heal.overview.final[is.na(heal.overview.final)]=0
heal.overview.final$`HIV.prevalence.adult.(%.ages.15-49)`=heal.overview.final$`HIV.prevalence.adult.(%.ages.15-49)`*10
colnames(heal.overview.final)[3]="HIV.prevalence.adult.(per.1000.ages.15-49)"
radar=ggradar(heal.overview.final,grid.mid = 50,grid.max = 100)
hiv.plot=ggplot(data=heal.overview.final,mapping = aes(x=level,y=`HIV.prevalence.adult.(per.1000.ages.15-49)`))+
geom_bar(stat="identity")+
coord_flip()
}
# if(plot_type=="radar")
#  return(radar)
#
# if(plot_type=="hiv.plot")
#   return(hiv.plot)
#
return(heal.overview.final)
}
#heal.level.in=c("VERY HIGH HUMAN DEVELOPMENT","LOW HUMAN DEVELOPMENT","MEDIUM HUMAN DEVELOPMENT","HIGH HUMAN DEVELOPMENT")
heal.overview.test=heal_plot_fun(heal.level.in,date_from=2013,date_to=2016,
heal.geography.in=c("China","Angola","Latin America and the Caribbean"),plot_type = "")
ggplot(data=heal.overview.test,mapping = aes(x=geo,y=`HIV.prevalence.adult.(per.1000.ages.15-49)`))+
geom_bar(stat="identity")+
coord_flip()
View(heal.overview.test)
heal_plot_fun=function(heal.level.in,heal.geography.in,date_from,date_to,plot_type){
if (is.null(heal.level.in)==TRUE){
heal.overview1 <- hdi.databank.m %>%
filter( Region %in% heal.geography.in) %>%
filter((year>= date_from) & (year<= date_to)) %>%
replace_na(list(hdi=0))%>%
group_by(Region,indicator_name)%>%summarise(avg = mean(hdi))
heal.overview2 <- hdi.databank.m %>%
filter(country_name %in% heal.geography.in) %>%
filter((year>= date_from) &(year<= date_to)) %>%
replace_na(list(hdi=0))%>%
group_by(country_name,indicator_name)%>%summarise(avg = mean(hdi))
colnames(heal.overview2)[1]="Region"
heal.overview <- rbind(heal.overview1,heal.overview2)
# heal.overview %>%
#   mutate_at(vars(avg),funs(rescale))
heal.overview.final=heal.overview%>%spread(indicator_name,avg)
colnames(heal.overview.final)[1]="geo"
colnames(heal.overview.final)=gsub(" ",".",colnames(heal.overview.final))
colnames(heal.overview.final)=gsub(",","",colnames(heal.overview.final))
#colnames(heal.overview.final)=gsub("(","",colnames(heal.overview.final))
#colnames(heal.overview.final)=gsub(")","",colnames(heal.overview.final))
heal.overview.final=heal.overview.final[,c("geo",
"Current.health.expenditure.(%.of.GDP)",
"HIV.prevalence.adult.(%.ages.15-49)",
"Life.expectancy.at.birth.(years)",
"Mortality.rate.infant.(per.1000.live.births)",
"Mortality.rate.under-five.(per.1000.live.births)")]
heal.overview.final[is.na(heal.overview.final)]=0
heal.overview.final$`HIV.prevalence.adult.(%.ages.15-49)`=heal.overview.final$`HIV.prevalence.adult.(%.ages.15-49)`*10
colnames(heal.overview.final)[3]="HIV.prevalence.adult.(per.1000.ages.15-49)"
radar=ggradar(heal.overview.final,grid.mid = 50,grid.max = 100)
hiv.plot=ggplot(data=heal.overview.final,mapping = aes(x=geo,y=`HIV.prevalence.adult.(per.1000.ages.15-49)`))+
geom_bar(stat="identity")+
coord_flip()
}else{
heal.overview <- hdi.databank.m %>%
filter( level %in% heal.level.in) %>%
filter((year>= date_from) & (year<= date_to)) %>%
replace_na(list(hdi=0))%>%
group_by(level,indicator_name)%>%summarise(avg = mean(hdi))
heal.overview.final=heal.overview%>%spread(indicator_name,avg)
colnames(heal.overview.final)=gsub(" ",".",colnames(heal.overview.final))
colnames(heal.overview.final)=gsub(",","",colnames(heal.overview.final))
#colnames(heal.overview.final)=gsub("(","",colnames(heal.overview.final))
#colnames(heal.overview.final)=gsub(")","",colnames(heal.overview.final))
heal.overview.final=heal.overview.final[,c("level",
"Current.health.expenditure.(%.of.GDP)",
"HIV.prevalence.adult.(%.ages.15-49)",
"Life.expectancy.at.birth.(years)",
"Mortality.rate.infant.(per.1000.live.births)",
"Mortality.rate.under-five.(per.1000.live.births)")]
heal.overview.final[is.na(heal.overview.final)]=0
heal.overview.final$`HIV.prevalence.adult.(%.ages.15-49)`=heal.overview.final$`HIV.prevalence.adult.(%.ages.15-49)`*10
colnames(heal.overview.final)[3]="HIV.prevalence.adult.(per.1000.ages.15-49)"
radar=ggradar(heal.overview.final,grid.mid = 50,grid.max = 100)
hiv.plot=ggplot(data=heal.overview.final,mapping = aes(x=level,y=`HIV.prevalence.adult.(per.1000.ages.15-49)`))+
geom_bar(stat="identity")+
coord_flip()
}
# if(plot_type=="radar")
#  return(radar)
#
# if(plot_type=="hiv.plot")
#   return(hiv.plot)
#
return(heal.overview.final)
}
heal.level.in=as.null()
#heal.level.in=c("VERY HIGH HUMAN DEVELOPMENT","LOW HUMAN DEVELOPMENT","MEDIUM HUMAN DEVELOPMENT","HIGH HUMAN DEVELOPMENT")
heal.overview.test=heal_plot_fun(heal.level.in,date_from=2013,date_to=2016,
heal.geography.in=c("China","Angola","Latin America and the Caribbean"),plot_type = "")
ggplot(data=heal.overview.test,mapping = aes(x=geo,y=`HIV.prevalence.adult.(per.1000.ages.15-49)`))+
geom_bar(stat="identity")+
coord_flip()
View(heal.overview.test)
